openapi: 3.0.3
info:
  title: My openAPI exo6
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /users/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: user with all his info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
              example:
                id: 1
                personalInfo:
                  first_name: Mayah
                  last_name: Alebi
                  birthdate: 2000-12-23
                  email: mayah@gmail.com
                address:
                  address_street: Lot 47K Ivato
                  address_city: Mamory Ivato
                  address_country: Madagascar
                  address_postal_code: 111
                preferences:
                  needs_newsletter: true
                  language: eng
        404:
          description: user not found
          content:
            text/plain:
              schema:
                type: string
                example: user not found

  /users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateUserProfile"
            example:
              - personalInfo:
                  first_name: Alex
                  last_name: Corin
                  birthdate: 2009-03-25
                  email: alexProo@gmail.com
                address:
                  address_street: 123 Rue du Faubourg Saint-Honoré
                  address_city: Paris
                  address_country: France
                  address_postal_code: 77123
                preferences:
                  needs_newsletter: true
                  language: fr
      responses:
        201:
          description: users created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserProfile"
              example:
                - id: 5
                  personalInfo:
                    first_name: Alex
                    last_name: Corin
                    birthdate: 2006-12-15
                    email: alexProo@gmail.com
                  address:
                    address_street: 123 Rue du Faubourg Saint-Honoré
                    address_city: Paris
                    address_country: France
                    address_postal_code: 77123
                  preferences:
                    needs_newsletter: true
                    language: fr

  /users/{id}/personalInfo:
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonalInfo"
            example:
              first_name: Alex
              last_name: Corine
              birthdate: 2024-04-15
              email: alexProo2@gmail.com
      responses:
        200:
          description: update personal info
          content:
            text/plain:
              schema:
                type: string
              example: update successfully

  /users/{id}/address:
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
            example:
              address_street: 123 Rue du Faubourg Saint-Antoine
              address_city: Genève
              address_country: Suisse
              address_postal_code: 77000
      responses:
        200:
          description: update address
          content:
            text/plain:
              schema:
                type: string
              example: update successfully

  /users/{id}/preferences:
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Preferences"
            example:
              needs_newsletter: false
              language: eng
      responses:
        200:
          description: update preferences
          content:
            text/plain:
              schema:
                type: string
              example: update successfully

components:
  schemas:
    UserProfile:
      type: object
      properties:
        id:
          type: integer
        personalInfo:
          $ref: "#/components/schemas/PersonalInfo"
        address:
          $ref: "#/components/schemas/Address"
        preferences:
          $ref: "#/components/schemas/Preferences"

    CreateUserProfile:
      type: object
      properties:
        personalInfo:
          $ref: "#/components/schemas/PersonalInfo"
        address:
          $ref: "#/components/schemas/Address"
        preferences:
          $ref: "#/components/schemas/Preferences"

    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email


    Address:
      type: object
      properties:
        address_street:
          type: string
        address_city:
          type: string
        address_country:
          type: string
        address_postal_code:
          type: string

    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum:
            - mg
            - fr
            - eng